library(knitr)
library(knitr)
ttt <- data.frame(i = 0:5, t_i = "abbaba")
kable(ttt)
library(knitr)
ttt <- data.frame(i = 0:5,
t_i = "abbaba",
MS = c(2, 1, 1, 2, 1, 1),
ms = c("2 001", "0 1", "1 01", "2 001", "0 1", "1 01"),
runs = c(0, 1, 0, 0, 1, 1))
kable(ttt)
runif(10)
runif(10) > 0.5
rbinom(10, 10, 0.5)
3:1
lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0)
N <- 10
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0)
do.call(c, lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0))
x <- lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0)
xl
rm(list=ls())
N <- 5
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0)
xl
#do.call(c, lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0))
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else -1 * (jump[i]:0))
xl
cumsum(do.call(c, lapply(1:N, function(i) if(going_up[i]) jump[i] else jump[i]:0)))
cumsum(do.call(c, xl))
rm(list=ls())
N <- 5
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else -1 * (jump[i]:0))
xl
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
cumsum(do.call(c, xl))
going_up
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
cumsum(do.call(c, xl))
rm(list=ls())
N <- 500
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
plot(cumsum(do.call(c, xl)))
plot(cumsum(do.call(c, xl)), type='l')
grid()
runs <- c(0, ms[2:N] - ms[1:(N-1)])
ms <- cumsum(do.call(c, xl))
runs <- c(0, ms[2:N] - ms[1:(N-1)])
ms <- cumsum(do.call(c, xl))
runs <- c(0, ms[2:N] - ms[1:(N-1)])
plot(ms, type='l')
plot(runs)
ms
lines(runs, type='o')
ms <- cumsum(do.call(c, xl))
runs <- c(0, ms[2:N] - ms[1:(N-1)])
plot(ms, type='l')
lines(runs, type='o')
grid()
runs
plot(ms[runs == -1], type='o')
ms <- cumsum(do.call(c, xl))
runs <- c(0, ms[2:N] - ms[1:(N-1)])
plot(ms, type='l')
plot(ms[runs == -1], type='o')
grid()
rm(list=ls())
N <- 5
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
runs <- c(0, ms[2:N] - ms[1:(N-1)])
plot(ms, type='l')
plot(ms[runs == -1], type='o')
grid()
runs
ms
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='l')
plot(ms[runs == -1], type='o')
grid()
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='l')
plot(ms[runs == -1], type='o')
grid()
ms
rm(list=ls())
N <- 5
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='l')
plot(ms[runs == -1], type='o')
grid()
ms
runs
plot(ms, type='b', color = 1 + ms[runs == -1])
plot(ms, type='b', col = 1 + ms[runs == -1])
runs
plot(ms, type='b', col = 1 + (runs == -1))
rm(list=ls())
N <- 5
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1))
grid()
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1))
grid()
plot(ms, type='b', pch = 1 + (runs == -1))
plot(ms, type='b', pch = 2 + (runs == -1))
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 10, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1))
grid()
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 4, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1))
grid()
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 4, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1))
grid()
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 4, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1))
grid()
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 2, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
xl
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1))
grid()
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 2, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1), pch='.')
grid()
nan
NaN
plot(ms, type='b', col = 1 + (runs == -1), pch=19)
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 20, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1), pch=19)
grid()
rm(list=ls())
N <- 50
going_up <- runif(N) > 0.5
jump <- rbinom(N, 20, 0.5)
xl <- lapply(1:N, function(i) if(going_up[i]) jump[i] else rep(-1, jump[i]))
ms <- cumsum(do.call(c, xl))
M <- length(ms)
runs <- c(0, ms[2:M] - ms[1:(M-1)])
plot(ms, type='b', col = 1 + (runs == -1), pch='.')
grid()
